[tool.poetry]
name = "hermes"
version = "0.1.0"
description = "A simple tool to facilitate browsing of broadcast radio schedules."
authors = ["Jack Twilley <mathuin@gmail.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.13"
flask = "^3.1.0"
flask-sqlalchemy = "^3.1.1"
marshmallow-sqlalchemy = "^1.1.0"
gunicorn = "^23.0.0"

[tool.poetry.group.test.dependencies]
tox = "^4.23.2"
ruff = "^0.7.4"
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
mypy = "^1.13.0"
pyfakefs = "^5.7.1"

[tool.coverage.run]
branch = true
source = ["hermes"]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 80

[tool.pytest.ini_options]
addopts = "--cov --cov-report=term --cov-report=xml --import-mode=importlib"
testpaths = ["tests"]

[tool.ruff]
fix = true
line-length = 120
target-version = "py313"

[tool.ruff.lint]
select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]

[tool.tox]
env_list = ["lint", "format", "type", "py313"]

[tool.tox.env_run_base]
skip_install = true
allowlist_externals = ["poetry"]
commands_pre = [["poetry", "install"]]

[tool.tox.env.lint]
commands = [["poetry", "run", "ruff", "check", "hermes", "tests"]]

[tool.tox.env.format]
commands = [["poetry", "run", "ruff", "format", "hermes", "tests"]]

[tool.tox.env.type]
commands = [["poetry", "run", "mypy", "hermes", "tests"]]

[tool.tox.env.py313]
commands = [["poetry", "run", "pytest"]]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
